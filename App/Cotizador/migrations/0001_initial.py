# Generated by Django 5.0.4 on 2024-09-09 23:01

import django.db.models.deletion
from django.db import migrations, models
import pandas as pd

class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    def insert_init_data(apps, schema_editor):
 #---------------------------------------------------------------------------------------------------------------------------------------------       
        #Crea categorías        
        df = pd.read_csv('Cotizador/migrations/Servicios y categorías.csv')
        list_categorias = df['CATEGORIA'].unique()
        Categoria = apps.get_model('Cotizador', 'Categoria')
        for i in list_categorias:
            Categoria.objects.create(descripcion = i)

 #---------------------------------------------------------------------------------------------------------------------------------------------       
        #Crea Servicios                
        Categoria = apps.get_model('Cotizador', 'Categoria')
        Servicio = apps.get_model('Cotizador', 'Servicio')
        

        list_servicios_register_objs = []
        for i, row in df.iterrows():

            categoriabd = Categoria.objects.get(descripcion = row['CATEGORIA'])
            
            list_servicios_register_objs.append(
                Servicio(
                    idCategoria = categoriabd,
                    descripcion = row['SERVICIO']
                )
            )    
        Servicio.objects.bulk_create (list_servicios_register_objs) 
        
 #---------------------------------------------------------------------------------------------------------------------------------------------       
        #Crea Vehículos 
        df = pd.read_csv('Cotizador/migrations/Vehículos, Servicios y categorías.csv', usecols= range(2, 10 ))
        cabecera = df.columns
        Vehiculo = apps.get_model('Cotizador', 'Vehiculo')

        # Crea los vehículos en la tabla
        for i in cabecera:
            Vehiculo.objects.create(descripcion = i)

 #---------------------------------------------------------------------------------------------------------------------------------------------       
        #Crea VehiculoServicio
        df = pd.read_csv('Cotizador/migrations/Vehículos, Servicios y categorías.csv')

        Vehiculo = apps.get_model('Cotizador', 'Vehiculo')       
        Categoria = apps.get_model('Cotizador', 'Categoria')
        Servicio = apps.get_model('Cotizador', 'Servicio')

        #Crea la relación entre Vehículos y servicios en la tabla
        for i, row in df.iterrows():
            categoriabd = Categoria.objects.get(descripcion = row['CATEGORIA'])
            serviciobd = Servicio.objects.get(idCategoria = categoriabd, descripcion = row['SERVICIO'])

            for item in cabecera:
                if row[item] == 'a':
                    VehiculoServicio = apps.get_model('Cotizador', 'VehiculoServicio')
                    vehiculobd = Vehiculo.objects.get(descripcion = item )
                    #vehiculobd.servicios.add(serviciobd)
                    VehiculoServicio.objects.create(
                        Servicio = serviciobd,
                        Vehiculo = vehiculobd
                    )


    def undo_insert_data(apps, schema_editor):
 #---------------------------------------------------------------------------------------------------------------------------------------------       
        #Borra VehiculoServicio
        VehiculoServicio = apps.get_model('Cotizador', 'VehiculoServicio')
        VehiculoServicio.objects.all().delete()
 #---------------------------------------------------------------------------------------------------------------------------------------------       
        #Borra Vehículos      
        Vehiculos = apps.get_model('Cotizador', 'Vehiculo')
        Vehiculos.objects.all().delete()  
 #---------------------------------------------------------------------------------------------------------------------------------------------       
        #Borra Servicios 
        Servicio = apps.get_model('Cotizador', 'Servicio')
        Servicio.objects.all().delete()
 #---------------------------------------------------------------------------------------------------------------------------------------------       
        #Borra Categorías        
        Categoria = apps.get_model('Cotizador', 'Categoria')
        Categoria.objects.all().delete()

    operations = [
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.CharField(max_length=30, unique=True, verbose_name='Categoría')),
            ],
            options={
                'verbose_name': 'Categoría',
                'verbose_name_plural': 'Categorías',
                'db_table': 'categorias',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=30, unique=True, verbose_name='Nombre')),
                ('email', models.EmailField(max_length=40, verbose_name='E-Mail')),
                ('telefono', models.CharField(blank=True, max_length=25, null=True, verbose_name='Teléfono')),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
                'db_table': 'clientes',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Vehiculo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.CharField(max_length=30, unique=True, verbose_name='Vehículo')),
            ],
            options={
                'verbose_name': 'Vehículo',
                'verbose_name_plural': 'Vehículos',
                'db_table': 'vehiculos',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Servicio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.CharField(max_length=60, verbose_name='Servicio')),
                ('idCategoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Cotizador.categoria')),
            ],
            options={
                'verbose_name': 'Servicio',
                'verbose_name_plural': 'Servicios',
                'db_table': 'servicios',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='VehiculoServicio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Servicio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Cotizador.servicio')),
                ('Vehiculo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Cotizador.vehiculo')),
            ],
            options={
                'verbose_name': 'Vehículo Y Servicio',
                'verbose_name_plural': 'Vehículos y Servicios',
                'db_table': 'vehiculoservicio',
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='vehiculo',
            name='Servicio',
            field=models.ManyToManyField(blank=True, through='Cotizador.VehiculoServicio', to='Cotizador.servicio'),
        ),
        migrations.RunPython(insert_init_data, reverse_code =  undo_insert_data)
    ]
